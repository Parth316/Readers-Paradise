name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # --- Lint & Type Check ---
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install backend dependencies
        run: npm install
        working-directory: backend

      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend

      # - name: Run ESLint (backend)
      #   run: npm run lint
      #   working-directory: backend

      # - name: Run ESLint (frontend)
      #   run: npm run lint
      #   working-directory: frontend

  # --- Backend Tests ---
  backend-tests:
    runs-on: ubuntu-latest
    services:
          :
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        run: npm install
        working-directory: backend

      - name: Run backend tests
        run: npm test
        working-directory: backend

  # --- Frontend Tests ---
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend

      - name: Run frontend tests
        run: npm test -- --ci --watchAll=false
        working-directory: frontend

  # --- End-to-End Tests (Optional with Cypress) ---
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend

      - name: Install Cypress
        run: npm install cypress --save-dev
        working-directory: frontend

      - name: Run Cypress tests
        run: npx cypress run
        working-directory: frontend
